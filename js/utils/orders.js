// order.js
import { showToasts } from '../modules/common/helpers/toast.helpers.js';
import { getCart, updateCounter, saveCartToServer, getCurrentUser } from '../modules/cart/cart-utils.js';

export async function createOrder() {
    const button = document.getElementById('sub-order');
    if (!button) return;

    button.addEventListener('click', async (e) => {
        e.preventDefault();
        
        // –°–Ω–∞—á–∞–ª–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É —Å —Å–µ—Ä–≤–µ—Ä–æ–º
        try {
            await saveCartToServer();
            console.log('‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã:', error);
            showToasts('–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', 'error');
            return;
        }

        const addressElement = document.getElementById('address');
        const totalCountElement = document.getElementById('quant');
        const totalAmountElement = document.getElementById('fp');
        
        if (!totalCountElement || !totalAmountElement) {
            alert('–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞');
            return;
        }
        
        const address = addressElement.textContent || "–ê–¥—Ä–µ—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç";
        const totalCount = parseInt(totalCountElement.textContent) || 0;
        const totalAmount = parseFloat(totalAmountElement.textContent.replace(/[^\d.,]/g, '').replace(',', '.')) || 0;

        if (totalCount <= 0) {
            alert('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞');
            return;
        }

        if (totalAmount <= 0) {
            toast.warning("–ù–µ–≤–µ—Ä–Ω–∞—è —Å—É–º–º–∞ –∑–∞–∫–∞–∑–∞!")
            return;
        }

        const userId = localStorage.getItem('userId');
        const token = localStorage.getItem('access_token');

        // –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –∑–∞–∫–∞–∑
        const cart = getCart();
        const items = cart.map(item => ({
            productId: item.productId || item._id,
            name: item.tShirtName || item.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–æ–≤–∞—Ä',
            price: item.price || 0,
            quantity: item.quantity || 1,
            size: item.size || '',
            color: item.color || '',
            discount: item.discount || 0,
            picturePath: Array.isArray(item.picturePath) ? item.picturePath[0] : item.picturePath || '',
            nameCollection: item.nameCollection || '',
            cut: item.cut || ''
        }));

        const orderData = {
            userId: userId,
            totalCount: totalCount,
            totalAmount: totalAmount,
            address: address,
            items: items, // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã –≤ –∑–∞–∫–∞–∑
            createdAt: new Date().toISOString()
        };

        try {
            button.disabled = true;
            button.textContent = '–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞...';

            console.log('üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞:', orderData);

            const response = await fetch('https://backendalcraft-production.up.railway.app/orders/create', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify(orderData)
            });
            
            if (!response.ok) {
                const errorData = await response.json().catch(() => ({}));
                throw new Error(errorData.message || `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status}`);
            }

            const result = await response.json();
            console.log('‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω:', result);

            // –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞
            await clearCartAfterOrder();
            
            // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç—É—é –∫–æ—Ä–∑–∏–Ω—É —Å —Å–µ—Ä–≤–µ—Ä–æ–º
            await saveCartToServer([]);
            
            showToasts('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!', 'success');
            
            // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∑–∞–∫–∞–∑–æ–≤ –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º
            setTimeout(() => {
                window.location.reload();
            }, 1500);
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞:', error);
            showToasts(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: ${error.message}`, 'error');
        } finally {
            button.disabled = false;
            button.textContent = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
        }
    });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞
async function clearCartAfterOrder() {
    try {
        const { userId } = getCurrentUser();
        if (userId) {
            // –û—á–∏—â–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –∫–æ—Ä–∑–∏–Ω—É
            localStorage.setItem(`cart_${userId}`, JSON.stringify([]));
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
            updateCounter();
            updateCartTotal();
            
            console.log('‚úÖ –ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–∫–∞–∑–∞');
        }
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã:', error);
    }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
export async function forceCartSync() {
    try {
        await saveCartToServer();
        console.log('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ—Ä–∑–∏–Ω—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–∞');
        return true;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
        return false;
    }
}

// –ú–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∫–æ—Ä–∑–∏–Ω—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
    if (window.location.pathname.includes('checkout') || 
        window.location.pathname.includes('order')) {
        forceCartSync().catch(console.error);
    }
});

export function validateCartBeforeOrder() {
    const cart = getCart(); 
    const button = document.getElementById('sub-order');
    
    if (!button) return;
    
    if (cart.length === 0) {
        button.disabled = true;
        button.style.opacity = '0.6';
        button.style.cursor = 'not-allowed';
        button.title = '–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É';
    } else {
        button.disabled = false;
        button.style.opacity = '1';
        button.style.cursor = 'pointer';
        button.title = '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑';
    }
}

document.addEventListener('DOMContentLoaded', () => {
    validateCartBeforeOrder();
    createOrder();

    window.addEventListener('cart:updated', () => {
        validateCartBeforeOrder();
    });
});